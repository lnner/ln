const定义的变量不可以修改，而且必须初始化（赋值）【不可修改，必初始化】
const虽然是常量，不允许修改默认赋值，但如果定义的是对象Object，那么可以修改对象内部的属性值包括新增删除键值对也是可以的。

let是块级作用域，函数内部使用let定义后，对函数外部无影响（作用在大括号括起来的内容，不能声明提升，即，使用 let 声明的变量，在声明前无法使用，否则将会导致错误）

var定义的变量可以修改，如果不初始化会输出undefined，不会报错【可以修改，可不初始化】

ES6新增let和const两个变量声明命令，他们都具有如下特性：
相同点：
1、块局作用域，都是在当前块内有效，执行到块外会被销毁;
2、不存在变量提升(TDZ)，一定声明后才能使用;
3、暂时性死区，在代码块内使用let命令声明变量之前，该变量都是不可用的，不受外部变量影响;
4、在相同作用域范围内不允许重复声明;
const与let不同点在于：
1、const如果声明的变量是简单的值，则不能改变变量的值，修改会报错;
2、const如果声明的是复合类型的变量，则只保证变量地址不变，值可以变;
3、let声明的变量可以重复赋值
