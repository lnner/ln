
Array：

影响原数组：（没有特别说明的返回值为修改后的数组）
pop()与shift() 相反----删除最后一个元素并返回该元素与删除第一个元素并返回该元素
unshift() 添加元素到数组开头，返回的值是数组长度
splice(start,howmany,element) 为插入或替换或删除一个或多个元素，返回值是替换或删除的元素
push() 为在数组末尾，添加一个或多个元素，并返回修改后数组的长度
toString() 把数组转换为字符串
join() 方法用于把数组中的所有元素放入个分隔符，之后变成字符串//arr.join(',')==arr.toString()
reverse() 方法用于颠倒数组中元素的顺序。

不影响：
concat() 为连接一个或多个元素或数组，返回值为连接好的数组，不影响原数组
slice(start,end) 为截取某段，不影响原数组--//[].slice.call(arguments)--arguments（伪数组）转数组===Array.prototype.slice.call(arguments)-----[...arguments]//es6

arr---es6
find()函数用来查找目标元素，找到就返回该元素，找不到返回undefined。
findIndex()函数也是查找目标元素，找到就返回元素的位置，找不到就返回-1。

String：
string的方法都不影响原字符串

slice(start,end)--------如果是负数，则该参数规定的是从字符串的尾部开始算起的位置
substr(start,length)----同上，但length为0或负则无数据//ECMAscript没有对该方法进行标准化，因此反对使用它。
substring(start,stop)---不接受负的参数，不包括结尾
以上三个都是截取

search()返回正则表达式在字符串中首次匹配项的<索引>;否则，返回 -1，没有传参数则0。
match()找到一个或多个正则表达式的匹配，返回数组形式，<若是带有g则数组内容为匹配到的实际内容，否则为匹配目标相关数据的数组>，没有传参数则null。
charAt() 方法可返回指定位置的字符，返回的字符是长度只为 1 的字符串
toLowerCase()把字符串转换为小写
toUpperCase()把字符串转换为大写。
indexOf(searchvalue,fromindex)
该方法将从头到尾地检索字符串，看它是否含有子串searchvalue。fromindex为开始检索的位置。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。是从 0 开始找的。
注释：indexOf() 方法对大小写敏感！且如果要检索的字符串值没有出现，则该方法返回 -1。

split(separator//分隔符 ，length) 方法用于把一个字符串分割成字符串数组，从指定的地方(分隔符)分割，可选指定返回的数组的最大长度

replace(regexp//正则表达式或字符串  ,replacement//任何数据)
方法执行的是查找并替换的操作，如果regexp具有全局标志g，那么replace()方法将替换所有匹配的子串。否则，它只替换第一个匹配子串。
replace(/正则表达式或字符串/g,replacement)



Math:
Math.方法(数值)

abs(x)返回数的绝对值
round(x) 把数四舍五入为最接近的整数 （同下）
ceil(x) 对数进行上舍入 （遇到负数，要往大/右的舍入，例如Math.ceil(-4.5)===-4）
floor(x) 对数进行下舍入 	反理同上
random() 返回 0 ~ 1 之间的随机数 [0,1)

正则：
exec 和 String.match无g时结果类似，带有匹配目标相关数据的数组，在目标字符串中只执行一次正则匹配操作（无论是否有g）。
test() boolean值，判断当前正则是否能匹配目标字符串。